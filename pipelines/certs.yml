groups:
- name: all
  jobs:
  - generate-certs
  - install-certs

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: harbor-docker-virtual.usw1.packages.broadcom.com/frodenas/gcs-resource
    username: ((metric-store.jfrog-svc-username))
    password: ((metric-store.jfrog-svc-password))

resources:
- name: metric-store-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/metric-store-ci
    branch: ci
    private_key: ((metric-store.svcboteos_github_private_key))

- name: certs
  type: gcs-resource
  source:
    bucket: yuzu-certs
    json_key: ((metric-store.cf_denver_service_account))
    regexp: yuzu-certs-(.*).tgz

- name: monthly
  type: time
  source:
    interval: 720h

jobs:
- name: generate-certs
  plan:
  - get: monthly
    trigger: true
  - get: metric-store-ci
  - task: prepare-service-account
    file: metric-store-ci/tasks/generate-certs/prepare-service-account.yml
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((metric-store.cf_denver_service_account))
  - task: generate-certs
    file: metric-store-ci/tasks/generate-certs/generate-certs.yml
    attempts: 3
    params:
      CERT_DOMAINS: "*.yuzu.cf-denver.com,yuzu.cf-denver.com"
      CERT_EMAIL: "cf-log-cache@pivotal.io"
  - task: archive-certs
    file: metric-store-ci/tasks/generate-certs/archive-certs.yml
    params:
      ENV_NAME: "yuzu"
  - put: certs
    params:
      file: archived-certs/yuzu-certs-*.tgz

- name: install-certs
  plan:
  - in_parallel:
    - get: metric-store-ci
    - get: certs
      trigger: true
      passed: ["generate-certs"]
  - task: prepare-service-account
    file: metric-store-ci/tasks/generate-certs/prepare-service-account.yml
    params:
      GCP_SERVICE_ACCOUNT_JSON: ((metric-store.cf_denver_service_account))
  - task: extract-certs
    file: metric-store-ci/tasks/generate-certs/extract-certs.yml
  - task: install-certs
    file: metric-store-ci/tasks/generate-certs/install-certs.yml
    params:
      PROJECT_NAME: "cf-denver"
      ENV_NAME: "yuzu"
