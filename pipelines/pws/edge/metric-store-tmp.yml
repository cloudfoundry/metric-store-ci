resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: cf-deployment-concourse-tasks-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: v6.15.0

- name: metric-store-release
  type: git
  source:
    uri: git@github.com:pivotal/metric-store-release
    branch: develop
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: metric-store-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/metric-store-ci
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: log-cache-deployments
  type: git
  source:
    uri: git@github.com:cloudfoundry/log-cache-deployments
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-ci.yml/Notes/slack_alert_webhook_url))

jobs:
- name: metric-store-edge-tmp-deploy
  serial: true
  plan:
  - put: slack-alert
    params:
      silent: true
      username: ((slack-ci.yml/Notes/slack_alert_username))
      icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
      channel: ((slack-ci.yml/Notes/slack_alert_channel))
      text: ":yellow_heart: Started :metric: Metric Store deployment to :knife: PWS Edge"
  - aggregate:
    - get: cf-deployment-concourse-tasks-image
    - get: metric-store-release
    - get: metric-store-ci
    - get: log-cache-deployments
  - task: upload-metric-store
    file: metric-store-ci/tasks/upload-release/task.yml
    image: cf-deployment-concourse-tasks-image
    input_mapping:
      bosh-release-dir: metric-store-release
    params:
      BOSH_CA_CERT: ((bosh-ca-cert.certificate))
      BOSH_CLIENT: ((bosh-admin-client.username))
      BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
      BOSH_ENVIRONMENT: bosh.run.pivotal.io
      JSON_KEY: ((release-credentials.yml/Notes/gcp-service-account-key))
      FORCE: true
      RECORD_SHAS: true
  - task: deploy
    image: cf-deployment-concourse-tasks-image
    config:
      platform: linux
      params:
        BOSH_CA_CERT: ((bosh-ca-cert.certificate))
        BOSH_CLIENT: ((bosh-admin-client.username))
        BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
        BOSH_ENVIRONMENT: bosh.run.pivotal.io
        BOSH_DEPLOYMENT: tmp-metric-store-edge
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          cat <<EOT >> on-the-fly.yml
          - type: replace
            path: /instance_groups/name=metric-store/jobs/name=metric-store/provides
            value:
              metric-store:
                as: tmp-metric-store-edge
                shared: true
          - type: replace
            path: /name
            value: tmp-metric-store-edge
          - type: replace
            path: /instance_groups/name=metric-store/jobs/name=metric-store-nozzle/properties/shard_id?
            value: tmp-metric-store-edge
          - type: replace
            path: /instance_groups/name=metric-store/jobs/name=route_registrar/properties
            value:
              route_registrar:
                routes:
                - name: metric-store-edge-tmp-reverse-proxy
                  port: 8083
                  registration_interval: 20s
                  uris:
                  - metric-store-edge-tmp.run.pivotal.io
                  - '*.metric-store-edge-tmp.run.pivotal.io'
          - type: replace
            path: /instance_groups/name=metric-store/jobs/name=bpm?
            value: {name: bpm, release: bpm}
          - type: replace
            path: /releases/name=bpm?
            value:
              name: bpm
              sha1: 0cb3242063c95271c95b62de3a6d07072aff0b29
              url: https://bosh.io/d/github.com/cloudfoundry-incubator/bpm-release?v=0.9.0
              version: 0.9.0
          EOT

          bosh \
            deploy "log-cache-deployments/pws/edge/metric-store-edge-manifest.yml" \
            --non-interactive \
            --ops-file on-the-fly.yml
      inputs:
      - name: log-cache-deployments
  on_success:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ":green_heart: Finished :metric: Metric Store deployment to :knife: PWS Edge"
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ":broken_heart: Failed to deploy :metric: Metric Store: to :knife: PWS Edge
          Details here: https://concourse.run.pivotal.io/teams/pcf-observability/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
