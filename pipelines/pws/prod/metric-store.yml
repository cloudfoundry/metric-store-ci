resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: cf-deployment-concourse-tasks-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: v5.24.0

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    branch: v10.14.0 # bump to latest

- name: metric-store-release
  type: github-release
  source:
    user: cloudfoundry
    repository: metric-store-release
    access_token: ((github-key-ci.yml/Notes/github-access-token))

- name: metric-store-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/metric-store-ci
    branch: master
    private_key: ((github-key-ci.yml/Notes/github_key))

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-ci.yml/Notes/slack_alert_webhook_url))

jobs:
- name: metric-store-prod-deploy
  serial: true
  plan:
  - put: slack-alert
    params:
      silent: true
      username: ((slack-ci.yml/Notes/slack_alert_username))
      icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
      channel: ((slack-ci.yml/Notes/slack_alert_channel))
      text: ":yellow_heart: Started :metric: Metric Store deployment to :squirrel: PWS Prod"
  - in_parallel:
    - get: cf-deployment-concourse-tasks-image
    - get: cf-deployment-concourse-tasks
    - get: metric-store-release
      trigger: true
    - get: metric-store-ci
  - task: upload-metric-store-release
    file: metric-store-ci/tasks/upload-release-from-resource/task.yml
    image: cf-deployment-concourse-tasks-image
    input_mapping:
      release-dir: metric-store-release
    params:
      BOSH_CA_CERT: ((bosh-ca-cert.certificate))
      BOSH_CLIENT: ((bosh-admin-client.username))
      BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
      BOSH_ENVIRONMENT: bosh.run.pivotal.io
      BBL_STATE_DIR: ((bbl_state_dir))
      RELEASE_TARBALL_GLOB: "release*tgz"
  - task: deploy
    image: cf-deployment-concourse-tasks-image
    config:
      platform: linux
      params:
        BOSH_CA_CERT: ((bosh-ca-cert.certificate))
        BOSH_CLIENT: ((bosh-admin-client.username))
        BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
        BOSH_ENVIRONMENT: bosh.run.pivotal.io
        BOSH_DEPLOYMENT: metric-store-prod
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          bosh \
            deploy "metric-store-ci/deployments/pws/metric-store-prod.yml" \
            --non-interactive
      inputs:
      - name: metric-store-ci
  on_success:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ":green_heart: Finished :metric: Metric Store deployment to :squirrel: PWS Prod"
  on_failure:
    do:
    - put: slack-alert
      params:
        silent: true
        username: ((slack-ci.yml/Notes/slack_alert_username))
        icon_url: ((slack-ci.yml/Notes/slack_alert_icon_url))
        channel: ((slack-ci.yml/Notes/slack_alert_channel))
        text: ":broken_heart: Failed to deploy :metric: Metric Store: to :squirrel: PWS Prod
          Details here: https://concourse.run.pivotal.io/teams/pcf-observability/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"

- name: blackbox-deploy
  serial: true
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: metric-store-release
      passed: [metric-store-prod-deploy]
      trigger: true
    - get: metric-store-ci
  - in_parallel:
    - task: upload-metric-store-release
      file: metric-store-ci/tasks/upload-release-from-resource/task.yml
      image: cf-deployment-concourse-tasks-image
      input_mapping:
        release-dir: metric-store-release
      params:
        BOSH_CA_CERT: ((bosh-ca-cert.certificate))
        BOSH_CLIENT: ((bosh-admin-client.username))
        BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
        BOSH_ENVIRONMENT: bosh.run.pivotal.io
        BBL_STATE_DIR: ((bbl_state_dir))
        RELEASE_TARBALL_GLOB: "release*tgz"
  - task: metric-store-prod-blackbox-deploy
    image: cf-deployment-concourse-tasks-image
    config:
      platform: linux
      inputs:
      - name: metric-store-release
      - name: metric-store-ci
      params:
        DEPLOYMENT_NAME: metric-store-prod-blackbox
        MANIFEST_FILE: deployments/pws/metric-store-prod-blackbox.yml
        BOSH_CLIENT: ((bosh-admin-client.username))
        BOSH_CLIENT_SECRET: ((bosh-admin-client.password))
        BOSH_CA_CERT: ((bosh-ca-cert.certificate))
        BOSH_ENVIRONMENT: bosh.run.pivotal.io
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -eux

          bosh \
            deploy "metric-store-ci/$MANIFEST_FILE" \
            --deployment "$DEPLOYMENT_NAME" \
            --non-interactive
