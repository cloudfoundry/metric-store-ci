resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: harbor-docker-virtual.usw1.packages.broadcom.com/frodenas/gcs-resource
    tag: v0.5.1
    username: ((metric-store.jfrog-svc-username))
    password: ((metric-store.jfrog-svc-password))

- name: pivnet
  type: docker-image
  source:
    repository: harbor-docker-virtual.usw1.packages.broadcom.com/pivotalcf/pivnet-resource
    tag: latest-final
    username: ((metric-store.jfrog-svc-username))
    password: ((metric-store.jfrog-svc-password))

resources:
- name: metric-store-tile-image
  type: docker-image
  source:
    repository: gcr.io/cf-loggregator-log-cache/metric-store-tile
    username: _json_key
    password: ((metric-store.gcp_service_account_key))

- name: cf-deployment-concourse-tasks-image
  type: docker-image
  source:
    repository: harbor-docker-virtual.usw1.packages.broadcom.com/relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: latest
    username: ((metric-store.jfrog-svc-username))
    password: ((metric-store.jfrog-svc-password))

- name: metric-store-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/metric-store-ci
    private_key: ((metric-store.svcboteos_github_private_key))
    branch: master

- name: pcf-observability-ci-image
  type: docker-image
  source:
    repository: gcr.io/cf-denver/pcf-observability-ci
    username: _json_key
    password: ((metric-store.gcp_service_account_key))

- name: metric-store-base-image
  type: docker-image
  source:
    repository: gcr.io/cf-loggregator-log-cache/metric-store-ci
    tag: latest
    username: _json_key
    password: ((metric-store.gcp_service_account_key))

- name: metric-store-develop
  type: git
  source:
    uri: git@github.com:cloudfoundry/metric-store-release
    branch: fast-test-develop
    private_key: ((metric-store.svcboteos_github_private_key))
    ignore_paths:
    - .final_builds
    - releases
    disable_ci_skip: false
    clean_tags: true

- name: metric-store-dev-release-version
  type: semver
  source:
    driver: gcs
    bucket: metric-store-ci-notifications
    key: test/metric-store-dev-release-version
    initial_version: 0.0.0
    json_key: ((metric-store.gcp_service_account_key))

- name: metric-store-dev-release
  type: gcs-resource
  source:
    bucket: metric-store-ci-notifications
    json_key: ((metric-store.gcp_service_account_key))
    regexp: test/metric-store-dev-releases/release-(.*).tgz

- name: concourse-tasks
  type: git
  source:
    uri: https://github.com/pivotal-cf/concourse-tasks
    branch: master

- name: golang-release
  type: git
  source:
    uri: git@github.com:bosh-packages/golang-release
    tag_filter: v*
    private_key: ((metric-store.svcboteos_github_private_key))

- name: metric-store-version
  type: semver
  source:
    driver: gcs
    bucket: metric-store-ci-versions
    key: test/metric-store-release-acceptance-tile
    json_key: ((metric-store.gcp_service_account_key))
    initial_version: 0.2.0-build.24

- name: dev-tile
  type: gcs-resource
  source:
    bucket: metric-store-ci-notifications
    json_key: ((metric-store.gcp_service_account_key))
    regexp: test/temp-baked-tiles/(.*).pivotal
    initial_version: 0.2.0-build.24

- name: gcp-light-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-jammy-go_agent
    version_family: latest
    tarball: true
    preserve_filename: true

- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bpm-release

- name: cf-routing-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/routing-release
    regexp: .*

jobs:
- name: unit-tests
  serial: true
  plan:
  - in_parallel:
    - get: metric-store-ci
    - get: metric-store-base-image
    - get: metric-store-develop
      trigger: true
  - task: run-tests
    attempts: 3
    image: metric-store-base-image
    config:
      platform: linux
      inputs:
        - name: metric-store-develop
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex
            pushd metric-store-develop
              scripts/test unit
            popd
- name: create-dev-release
  serial: true
  plan:
    - in_parallel:
      - get: metric-store-ci
      - get: metric-store-develop
        trigger: true
      - get: metric-store-dev-release-version
        params: { pre: dev }
      - get: cf-deployment-concourse-tasks-image
      - get: golang-release
    - task: create-dev-release
      file: metric-store-ci/tasks/create-dev-release/task.yml
      image: cf-deployment-concourse-tasks-image
      input_mapping:
        bosh-dev-release-dir: metric-store-develop
        bosh-dev-release-version: metric-store-dev-release-version
      params:
        JSON_KEY: ((metric-store.gcp_service_account_key))
    - put: metric-store-dev-release
      params:
        file: metric-store-dev-release/release-*.tgz
        content_type: application/octet-stream
    - put: metric-store-dev-release-version
      params: { file: bosh-new-dev-release-version/version }

- name: "Bake-PAS-Tile"
  plan:
    - in_parallel:
      - get: concourse-tasks
      - get: metric-store-ci
      - get: metric-store-develop
        passed: ["create-dev-release"]
      - get: metric-store-dev-release
        trigger: true
        passed: ["create-dev-release"]
      - get: metric-store-version
        params:
          pre: build
      - get: pcf-observability-ci-image
      - get: gcp-light-stemcell
      - get: bpm-release
      - get: cf-routing-release
    - task: "bake tile"
      image: pcf-observability-ci-image
      file: metric-store-ci/tasks/pas_tile_bake/task.yml
      input_mapping:
        metric-store-release: metric-store-develop
        metric-store-dev-release: metric-store-dev-release
        tile-version: metric-store-version
        stemcell: gcp-light-stemcell
    - put: dev-tile
      params:
        file: baked-tile/*.pivotal
        content_type: application/octet-stream
  ensure:
    put: metric-store-version
    params:
      file: new-tile-version/version

<% envs_we_care_about = {
  "us_3_0": "us_3_0"
} %>
<% envs_we_care_about.each do |env_version, pool_name| %>
- name: "Install-on-PCF-<%= env_version %>"
  plan:
    - in_parallel:
        - get: concourse-tasks
        - get: metric-store-ci
        - get: metric-store-develop
          passed: ["Bake-PAS-Tile"]
        - get: metric-store-dev-release
          passed: ["Bake-PAS-Tile"]
        - get: pcf-observability-ci-image
        - get: metric-store-tile-image
        - get: metric-store-version
          passed: ["Bake-PAS-Tile"]
        - get: dev-tile
          trigger: true
          passed: ["Bake-PAS-Tile"]
        - get: gcp-light-stemcell
          passed: ["Bake-PAS-Tile"]
    - task: "Claim Smith Env"
      attempts: 3
      image: metric-store-tile-image
      config:
        platform: linux
        outputs:
          - name: environment
        run:
          path: sh
          args:
            - "-c"
            - |
              set -eu
              # exports smith environment name to `env`
              $(smith claim -p <%= pool_name %> -n "cf-metric-store CI" | tail -1)
              echo "Claimed smith environment: ${env}"
              echo ${env} > environment/name
              smith read > environment/metadata
      on_failure:
        task: release-env
        image: metric-store-tile-image
        config:
          platform: linux
          run:
            path: sh
            args:
              - "-c"
              - |
                set -e
                sleep 10
      params:
        TOOLSMITHS_API_TOKEN: ((metric-store.smith_token))
    - task: "Upload and Config"
      input_mapping:
        tile-version: metric-store-version
        baked-tile: dev-tile
      image: pcf-observability-ci-image
      file: metric-store-ci/tasks/tile_install/task-prep.yml
    - task: "Apply Changes CF"
      attempts: 3
      image: pcf-observability-ci-image
      file: metric-store-ci/tasks/tile_install/task-apply-cf.yml
    - task: "Apply Changes Metric Store"
      image: pcf-observability-ci-image
      file: metric-store-ci/tasks/tile_install/task-apply-ms.yml

<% end %>
