#!/bin/bash -euf

# vi:syntax=sh

. ./metric-store-ci/tasks/shared_bash

RELEASE_VERSION=$(yq r pivnet-metadata/metadata.yml release.version)
echo $RELEASE_VERSION > release-version/version
TIMESTAMP=$(date +%s)

pushd p-metric-store-release-master
  git checkout master
  echo_green "Adding OSS & CSS SHAs to p-metric-store-release"
  git rev-parse HEAD > css_sha
  echo "CSS SHA: $(cat css_sha)"

  if [ -f go.mod ]; then
    set +e
    cat go.mod | grep cloudfoundry/metric-store-release | sed 's/.*-\([a-f0-9]*\)$/\1/g' > oss_sha
    echo "OSS SHA: $(cat oss_sha)"
    set -e
  fi

  echo_green "BOSH creating p-metric-store-release ${RELEASE_VERSION}"

  echo $RELEASE_VERSION > src/version

  # commit version bump
  git add .
  git commit -m "Bump version to ${RELEASE_VERSION}"

  # create release
  cat << EOF > config/private.yml
---
blobstore:
  options:
    credentials_source: static
    json_key: |
      $(echo ${JSON_KEY})
EOF

  bosh -n create-release --sha2 --final \
    --tarball ../p-metric-store-final-bosh-release/release-p-metric-store-${RELEASE_VERSION}.tgz \
    --version "${RELEASE_VERSION}"

  # commit release creation changes
  echo_green "Committing final release and git tag on master"
  git add .
  git commit -m "Create final ${RELEASE_VERSION} release"

  tag_name="v${RELEASE_VERSION}"
  final_release_abbrev=$(git rev-parse --abbrev-ref HEAD)
  final_release_sha=$(git rev-parse HEAD)
  git tag "${tag_name}" ${final_release_sha}

  cp -r . ../p-metric-store-release-master-modified
popd

echo_green "Merging version and release artifacts to develop"
pushd p-metric-store-release-develop
  git checkout develop
  git remote add -f local_master ../p-metric-store-release-master
  git merge -v --no-ff -m "Merge final release artifacts" "local_master/${final_release_abbrev}"

  cp -r . ../p-metric-store-release-develop-modified
popd

echo_green "BOSH creating oss-metric-store-release for $RELEASE_VERSION"
pushd oss-metric-store-release-master
  cat << EOF > config/private.yml
---
blobstore:
  options:
    credentials_source: static
    json_key: |
      $(echo ${JSON_KEY})
EOF
  OSS_RELEASE_VERSION="$(cat src/version)-tile.${TIMESTAMP}"
  bosh create-release --final \
    --tarball ../oss-metric-store-final-bosh-release/release-oss-metric-store-${OSS_RELEASE_VERSION}.tgz \
    --version "${OSS_RELEASE_VERSION}"
popd
