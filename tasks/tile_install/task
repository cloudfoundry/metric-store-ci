#!/bin/bash -eux
echo "Running tile install"

. ./metric-store-ci/tasks/shared_bash

if [ -f environment/metadata ]; then
  cp environment/metadata env.json
else
  echo ${TOOLSMITHS_ENV_JSON} > env.json
fi
export OM_TARGET=$(jq -r .ops_manager.url < env.json)
export OM_USERNAME=$(jq -r .ops_manager.username < env.json)
export OM_PASSWORD=$(jq -r .ops_manager.password < env.json)
export OM_SKIP_SSL_VALIDATION=true


export TILE_FILE=$(echo "$(set -- baked-tile/*.pivotal; echo "$1")")
export RELEASE_VERSION=$(cat tile-version/version)
export STEMCELL_FILE=$(cat gcp-light-stemcell/url | cut -d / -f 6)
export STEMCELL_SHA=$(shasum gcp-light-stemcell/stemcell.tgz | cut -d ' ' -f 1)
mv gcp-light-stemcell/stemcell.tgz gcp-light-stemcell/${STEMCELL_FILE}

om upload-product --product ${TILE_FILE}
om stage-product --product-name "p-metric-store" --product-version ${RELEASE_VERSION}

ert_subnet=$(jq -r .ert_subnet < env.json)
zone_1=$(jq -r .azs[0] < env.json)
zone_2=$(jq -r .azs[1] < env.json)
zone_3=$(jq -r .azs[2] < env.json)
cat > metric-store-tile-config.yml <<EOF
---
product-name: p-metric-store
network-properties:
  network:
    name: ${ert_subnet}
  other_availability_zones:
    - name: ${zone_1}
    - name: ${zone_2}
    - name: ${zone_3}
  singleton_availability_zone:
    name: ${zone_1}
EOF

om configure-product --config metric-store-tile-config.yml
om upload-stemcell --stemcell gcp-light-stemcell/${STEMCELL_FILE} --floating true --shasum ${STEMCELL_SHA}
om apply-changes --product-name "p-metric-store"

